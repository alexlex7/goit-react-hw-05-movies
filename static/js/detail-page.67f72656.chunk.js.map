{"version":3,"file":"static/js/detail-page.67f72656.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/MovieDetailsPage/MovieDetailsPage.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Thumb = styled.div`\n  width: 130px;\n  height: 200px;\n`;\nexport const CastImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/movieAPI';\nimport { CastImage, Thumb } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    getCast(movieId).then(setCredits).catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {credits.length > 0 && (\n        <ul>\n          {credits.map(({ character, name, profile_path, id }) => (\n            <li key={id}>\n              <Thumb>\n                <CastImage\n                  src={`https://image.tmdb.org/t/p/w400${profile_path}`}\n                  alt={name}\n                />\n              </Thumb>\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'services/movieAPI';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getReviews(movieId)\n      .then(setReviewsData)\n      .catch(console.log)\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviewsData.length > 0 && (\n        <ul>\n          {reviewsData.map(({ id, author, content }) => (\n            <li key={id}>\n              <strong>Author: {author}</strong>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {reviewsData.length === 0 && !isLoading && <p>There is no review</p>}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const DetailsContainer = styled.div`\n  padding: 15px;\n  display: flex;\n`;\nexport const ImgThumb = styled.div`\n  width: 200px;\n  height: 280px;\n`;\n\nexport const PosterImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 15px;\n`;\n\nexport const AdditionalInfoContainer = styled.div`\n  padding: 15px;\n`;\n\n// export const ListInfo = styled.ul``;\n","import Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\nimport { Link, Route, Routes, useParams, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'services/movieAPI';\nimport {\n  AdditionalInfoContainer,\n  DetailsContainer,\n  ImgThumb,\n  InfoContainer,\n  PosterImg,\n} from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) return;\n    getMovieById(movieId).then(setMovie).catch(console.log);\n  }, [movieId]);\n\n  const handleClick = () => {\n    navigate(-1);\n  };\n\n  const genres = ({ genres }) => genres.map(genre => genre.name).join(' ');\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={handleClick}\n        style={{ margin: '15px 0px 0px 15px' }}\n      >\n        Back\n      </button>\n      {movie.hasOwnProperty('id') && (\n        <DetailsContainer>\n          <ImgThumb>\n            <PosterImg\n              src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n          </ImgThumb>\n\n          <InfoContainer>\n            <h3>{movie.original_title}</h3>\n            <p>User Score: {movie.vote_average * 10}%</p>\n            <h4>Overview</h4>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{genres(movie)}</p>\n          </InfoContainer>\n        </DetailsContainer>\n      )}\n\n      <AdditionalInfoContainer>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </AdditionalInfoContainer>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n}\n","export const getTrendingMovies = () => {\n  return fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e'\n  )\n    .then(resp => resp.json())\n    .then(({ results }) => {\n      const movies = results.map(({ id, title }) => ({ id, title }));\n      return movies;\n    });\n};\n\nexport const getMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US`\n  ).then(resp => resp.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1`\n  )\n    .then(resp => resp.json())\n    .then(data => {\n      const reviews = data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n      return reviews;\n    });\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1`\n  )\n    .then(resp => resp.json())\n    .then(({ cast }) => {\n      const credits = cast.map(({ character, name, profile_path, id }) => ({\n        character,\n        name,\n        profile_path,\n        id,\n      }));\n      return credits;\n    });\n};\n\nexport const getMoviesByName = searchQuery => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  )\n    .then(resp => resp.json())\n    .then(({ results }) => {\n      const movies = results.map(({ id, title }) => ({ id, title }));\n      return movies;\n    });\n};\n"],"names":["Thumb","styled","CastImage","Cast","movieId","useParams","useState","credits","setCredits","useEffect","getCast","then","catch","console","log","length","map","character","name","profile_path","id","src","alt","Reviews","isLoading","setIsLoading","reviewsData","setReviewsData","getReviews","finally","author","content","DetailsContainer","ImgThumb","PosterImg","InfoContainer","AdditionalInfoContainer","MovieDetailsPage","movie","setMovie","navigate","useNavigate","getMovieById","type","onClick","style","margin","hasOwnProperty","poster_path","original_title","vote_average","overview","genres","genre","join","to","path","element","getTrendingMovies","fetch","resp","json","results","title","data","cast","getMoviesByName","searchQuery"],"sourceRoot":""}