{"version":3,"file":"static/js/detail-page.fe8ae294.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/DetailsPage/DetailsPage.styled.jsx","components/DetailsPage/DetailsPage.jsx","components/Reviews/Reviews.jsx","routes/MovieDetailsPage.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Thumb = styled.div`\n  width: 130px;\n  height: 200px;\n`;\nexport const CastImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/movieAPI';\nimport { CastImage, Thumb } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    getCast(movieId).then(setCredits).catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {credits.length > 0 && (\n        <ul>\n          {credits.map(({ character, name, profile_path, id }) => (\n            <li key={id}>\n              <Thumb>\n                <CastImage\n                  src={`https://image.tmdb.org/t/p/w400${profile_path}`}\n                  alt={name}\n                />\n              </Thumb>\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const DetailsContainer = styled.div`\n  padding: 15px;\n  display: flex;\n`;\nexport const ImgThumb = styled.div`\n  width: 200px;\n  height: 280px;\n`;\n\nexport const PosterImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DetailsContainer,\n  ImgThumb,\n  PosterImg,\n  InfoContainer,\n} from './DetailsPage.styled';\n\nfunction DetailsPage({ movie }) {\n  const genres = ({ genres }) => genres.map(genre => genre.name).join(' ');\n\n  return (\n    <DetailsContainer>\n      <ImgThumb>\n        <PosterImg\n          src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n          alt={movie.original_title}\n        />\n      </ImgThumb>\n\n      <InfoContainer>\n        <h3>{movie.original_title}</h3>\n        <p>User Score: {movie.vote_average * 10}%</p>\n        <h4>Overview</h4>\n        <p>{movie.overview}</p>\n        <h4>Genres</h4>\n        <p>{genres(movie)}</p>\n      </InfoContainer>\n    </DetailsContainer>\n  );\n}\n\nDetailsPage.propTypes = {\n  movie: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ),\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default DetailsPage;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'services/movieAPI';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getReviews(movieId)\n      .then(setReviewsData)\n      .catch(console.log)\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviewsData.length > 0 && (\n        <ul>\n          {reviewsData.map(({ id, author, content }) => (\n            <li key={id}>\n              <strong>Author: {author}</strong>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {reviewsData.length === 0 && !isLoading && <p>There is no review</p>}\n    </>\n  );\n}\n","import Cast from 'components/Cast/Cast';\nimport DetailsPage from 'components/DetailsPage/DetailsPage';\nimport Reviews from 'components/Reviews/Reviews';\nimport { useEffect, useState } from 'react';\nimport { Link, Route, Routes, useParams, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'services/movieAPI';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) return;\n    getMovieById(movieId).then(setMovie).catch(console.log);\n  }, [movieId]);\n\n  const handleClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={handleClick}\n        style={{ margin: '15px 0px 0px 15px' }}\n      >\n        Back\n      </button>\n      {movie.hasOwnProperty('id') && <DetailsPage movie={movie} />}\n\n      <div style={{ padding: '15px' }}>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n}\n","export const getTrendingMovies = () => {\n  return fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e'\n  )\n    .then(resp => resp.json())\n    .then(({ results }) => {\n      const movies = results.map(({ id, title }) => ({ id, title }));\n      return movies;\n    });\n};\n\nexport const getMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US`\n  ).then(resp => resp.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1`\n  )\n    .then(resp => resp.json())\n    .then(data => {\n      const reviews = data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n      return reviews;\n    });\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1`\n  )\n    .then(resp => resp.json())\n    .then(({ cast }) => {\n      const credits = cast.map(({ character, name, profile_path, id }) => ({\n        character,\n        name,\n        profile_path,\n        id,\n      }));\n      return credits;\n    });\n};\n\nexport const getMoviesByName = searchQuery => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  )\n    .then(resp => resp.json())\n    .then(({ results }) => {\n      const movies = results.map(({ id, title }) => ({ id, title }));\n      return movies;\n    });\n};\n"],"names":["Thumb","styled","CastImage","Cast","movieId","useParams","useState","credits","setCredits","useEffect","getCast","then","catch","console","log","length","map","character","name","profile_path","id","src","alt","DetailsContainer","ImgThumb","PosterImg","InfoContainer","movie","poster_path","original_title","vote_average","overview","genres","genre","join","Reviews","isLoading","setIsLoading","reviewsData","setReviewsData","getReviews","finally","author","content","MovieDetailsPage","setMovie","navigate","useNavigate","getMovieById","type","onClick","style","margin","hasOwnProperty","padding","to","path","element","getTrendingMovies","fetch","resp","json","results","title","data","cast","getMoviesByName","searchQuery"],"sourceRoot":""}