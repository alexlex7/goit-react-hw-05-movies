{"version":3,"file":"static/js/movies-page.c994e94b.chunk.js","mappings":"4LAGe,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAClC,OACE,wBACGA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,U,oICDF,SAASG,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeS,EAAf,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAYM,IAAI,UAAY,GACrCD,IACLE,EAAAA,EAAAA,IAAgBF,GAAOG,KAAKV,GAAWW,MAAMC,QAAQC,OACpD,CAACX,IAcJ,OACE,4BACE,mBACEY,KAAK,SACLC,QAPc,WAClBX,GAAU,IAONY,MAAO,CAAEC,OAAQ,qBAHnB,mBAQA,kBACEC,SAnBe,SAAAC,GACnBA,EAAEC,iBACFjB,EAAe,CAAEI,MAAOY,EAAEE,OAAOC,OAAOC,SAkBpCP,MAAO,CAAEQ,UAAW,OAAQC,WAAY,QAF1C,WAIE,kBACEC,KAAK,SACLZ,KAAK,OACLa,SA7Ba,SAAAR,GACnBpB,EAAcoB,EAAEE,OAAOE,QA6BjBA,MAAOzB,KAET,mBAAQgB,KAAK,SAAb,uBAGDvB,EAAOqC,OAAS,IAAK,SAAC,IAAD,CAAWrC,OAAQA,S,qJCrDxC,IAAMsC,EAAoB,WAC/B,OAAOC,MACL,4FAECpB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,UAClBtB,MAAK,YAEJ,OAFqB,EAAduB,QACgBzC,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,cAK3BwC,EAAe,SAAAzC,GAC1B,OAAOqC,MAAM,sCAAD,OAC4BrC,EAD5B,6DAEViB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,WAGTG,EAAa,SAAA1C,GACxB,OAAOqC,MAAM,sCAAD,OAC4BrC,EAD5B,4EAGTiB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,UAClBtB,MAAK,SAAA0B,GAMJ,OALgBA,EAAKH,QAAQzC,KAAI,kBAA8B,CAC7DC,GAD+B,EAAGA,GAElC4C,OAF+B,EAAOA,OAGtCC,QAH+B,EAAeA,gBASzCC,EAAU,SAAA9C,GACrB,OAAOqC,MAAM,sCAAD,OAC4BrC,EAD5B,4EAGTiB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,UAClBtB,MAAK,YAOJ,OAPkB,EAAX8B,KACchD,KAAI,kBAA4C,CACnEiD,UADuB,EAAGA,UAE1Bf,KAFuB,EAAcA,KAGrCgB,aAHuB,EAAoBA,aAI3CjD,GAJuB,EAAkCA,WAUpDgB,EAAkB,SAAAkC,GAC7B,OAAOb,MAAM,sIAAD,OAC4Ha,IAErIjC,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,UAClBtB,MAAK,YAEJ,OAFqB,EAAduB,QACgBzC,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA","sources":["components/MovieList/MovieList.jsx","routes/MoviesPage.jsx","services/movieAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ movies }) {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`}>{title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { getMoviesByName } from 'services/movieAPI';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function MoviesPage() {\n  const [inputValue, setInputValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const query = searchParam.get('query') || '';\n    if (!query) return;\n    getMoviesByName(query).then(setMovies).catch(console.log);\n  }, [searchParam]);\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParam({ query: e.target.search.value });\n  };\n\n  const handleClick = () => {\n    navigate(-1);\n  };\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={handleClick}\n        style={{ margin: '15px 0px 0px 15px' }}\n      >\n        Back\n      </button>\n\n      <form\n        onSubmit={handleSubmit}\n        style={{ marginTop: '15px', marginLeft: '15px' }}\n      >\n        <input\n          name=\"search\"\n          type=\"text\"\n          onChange={handleChange}\n          value={inputValue}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </div>\n  );\n}\n","export const getTrendingMovies = () => {\n  return fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e'\n  )\n    .then(resp => resp.json())\n    .then(({ results }) => {\n      const movies = results.map(({ id, title }) => ({ id, title }));\n      return movies;\n    });\n};\n\nexport const getMovieById = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US`\n  ).then(resp => resp.json());\n};\n\nexport const getReviews = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1`\n  )\n    .then(resp => resp.json())\n    .then(data => {\n      const reviews = data.results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n      return reviews;\n    });\n};\n\nexport const getCast = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1`\n  )\n    .then(resp => resp.json())\n    .then(({ cast }) => {\n      const credits = cast.map(({ character, name, profile_path, id }) => ({\n        character,\n        name,\n        profile_path,\n        id,\n      }));\n      return credits;\n    });\n};\n\nexport const getMoviesByName = searchQuery => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=0a0eacc01c98f8ef04ac7ca82867ea4e&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  )\n    .then(resp => resp.json())\n    .then(({ results }) => {\n      const movies = results.map(({ id, title }) => ({ id, title }));\n      return movies;\n    });\n};\n"],"names":["MovieList","movies","map","id","title","to","MoviesPage","useState","inputValue","setInputValue","setMovies","useSearchParams","searchParam","setSearchParam","navigate","useNavigate","useEffect","query","get","getMoviesByName","then","catch","console","log","type","onClick","style","margin","onSubmit","e","preventDefault","target","search","value","marginTop","marginLeft","name","onChange","length","getTrendingMovies","fetch","resp","json","results","getMovieById","getReviews","data","author","content","getCast","cast","character","profile_path","searchQuery"],"sourceRoot":""}